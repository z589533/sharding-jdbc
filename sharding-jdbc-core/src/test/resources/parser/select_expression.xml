<?xml version="1.0" encoding="UTF-8"?>
<asserts>
    <assert id="assertSelectExpressionWithSingleTable">
        <tables>
            <table name="t_order" alias="o"/>
        </tables>
        <order-by-columns>
            <order-by-column owner="o" name="order_id" alias="ORDER_BY_DERIVED_0" order-by-type="ASC" />
        </order-by-columns>
    </assert>
    <assert id="assertSelectDateFuncWithSingleTable">
        <tables>
            <table name="t_order_item" alias="i"/>
        </tables>
        <order-by-columns>
            <order-by-column name="DATE(i.c_date)" order-by-type="DESC" alias="c_date"/>
        </order-by-columns>
    </assert>
    <assert id="assertSelectNotEqualsWithSingleTable" parameters="1">
        <tables>
            <table name="t_order_item" />
        </tables>
        <order-by-columns>
            <order-by-column name="item_id" order-by-type="ASC" />
        </order-by-columns>
    </assert>
    <assert id="assertSelectEqualsWithSingleTable" parameters="1,1">
        <tables>
            <table name="t_order" />
        </tables>
        <conditions>
            <condition column-name="user_id" table-name="t_order" operator="EQUAL">
                <value index="0" literal="1" type="int" />
            </condition>
            <condition column-name="order_id" table-name="t_order" operator="EQUAL">
                <value index="1" literal="1" type="int" />
            </condition>
        </conditions>
    </assert>
    <!-- // TODO 这里可优化，将两个字段AND = 替换为永false -->
    <assert id="assertSelectEqualsWithSameShardingColumns" parameters="1,2">
        <tables>
            <table name="t_order" />
        </tables>
        <conditions>
            <condition column-name="order_id" table-name="t_order" operator="EQUAL">
                <value index="0" literal="1" type="int" />
            </condition>
            <condition column-name="order_id" table-name="t_order" operator="EQUAL">
                <value index="1" literal="2" type="int" />
            </condition>
        </conditions>
    </assert>
    <assert id="assertSelectBetweenWithSingleTable" parameters="1,10,2,5">
        <tables>
            <table name="t_order" />
        </tables>
        <conditions>
            <condition column-name="user_id" table-name="t_order" operator="BETWEEN">
                <value index="0" literal="1" type="int" />
                <value index="1" literal="10" type="int" />
            </condition>
            <condition column-name="order_id" table-name="t_order" operator="BETWEEN">
                <value index="2" literal="2" type="int" />
                <value index="3" literal="5" type="int" />
            </condition>
        </conditions>
        <order-by-columns>
            <order-by-column name="user_id" order-by-type="ASC" />
            <order-by-column name="order_id" order-by-type="ASC" />
        </order-by-columns>
    </assert>
    <assert id="assertSelectInWithSingleTable" parameters="1,2,3,9,10">
        <tables>
            <table name="t_order" />
        </tables>
        <conditions>
            <condition column-name="user_id" table-name="t_order" operator="IN">
                <value index="0" literal="1" type="int" />
                <value index="1" literal="2" type="int" />
                <value index="2" literal="3" type="int" />
            </condition>
            <condition column-name="order_id" table-name="t_order" operator="IN">
                <value index="3" literal="9" type="int" />
                <value index="4" literal="10" type="int" />
            </condition>
        </conditions>
        <order-by-columns>
            <order-by-column name="user_id" order-by-type="ASC" />
            <order-by-column name="order_id" order-by-type="ASC" />
        </order-by-columns>
    </assert>
    <!-- // TODO 目前对于IN多结果不同做到交集处理 仅仅是简单的加入 -->
    <assert id="assertSelectInWithSameShardingColumns" parameters="100,1001,1001,1002">
        <tables>
            <table name="t_order" />
        </tables>
        <conditions>
            <condition column-name="order_id" table-name="t_order" operator="IN">
                <value index="0" literal="1000" type="int" />
                <value index="1" literal="1001" type="int" />
            </condition>
            <condition column-name="order_id" table-name="t_order" operator="IN">
                <value index="2" literal="1001" type="int" />
                <value index="3" literal="1002" type="int" />
            </condition>
        </conditions>
        <order-by-columns>
            <order-by-column name="order_id" order-by-type="ASC" />
        </order-by-columns>
    </assert>
    <assert id="assertSelectIterator" parameters="1,2">
        <tables>
            <table name="t_order_item" alias="t"/>
        </tables>
        <conditions>
            <condition column-name="item_id" table-name="t_order_item" operator="IN">
                <value index="0" literal="1" type="int" />
                <value index="1" literal="2" type="int" />
            </condition>
        </conditions>
    </assert>
    <assert id="assertSelectNoShardingTable">
        <tables>
            <table name="t_order" alias="o"/>
            <table name="t_order_item" alias="i"/>
        </tables>
        <order-by-columns>
            <order-by-column owner="i" name="item_id" alias="ORDER_BY_DERIVED_0" order-by-type="ASC" />
        </order-by-columns>
    </assert>
    <assert id="assertSelectLikeWithCount" parameters="'init',1,2,9,10">
        <tables>
            <table name="t_order" alias="o"/>
        </tables>
        <conditions>
            <condition column-name="user_id" table-name="t_order" operator="IN">
                <value index="1" literal="1" type="int" />
                <value index="2" literal="2" type="int" />
            </condition>
            <condition column-name="order_id" table-name="t_order" operator="BETWEEN">
                <value index="3" literal="9" type="int" />
                <value index="4" literal="10" type="int" />
            </condition>
        </conditions>
        <aggregation-select-items>
            <aggregation-select-item inner-expression="(0)" aggregation-type="COUNT" alias="orders_count"/>
        </aggregation-select-items>
    </assert>
    <assert id="assertSelectWithBindingTable" parameters="1,2,9,10">
        <tables>
            <table name="t_order" alias="o"/>
            <table name="t_order_item" alias="i"/>
        </tables>
        <conditions>
            <condition column-name="user_id" table-name="t_order" operator="IN">
                <value index="0" literal="1" type="int" />
                <value index="1" literal="2" type="int" />
            </condition>
            <condition column-name="order_id" table-name="t_order" operator="BETWEEN">
                <value index="2" literal="9" type="int" />
                <value index="3" literal="10" type="int" />
            </condition>
        </conditions>
        <order-by-columns>
            <order-by-column owner="i" name="item_id" alias="ORDER_BY_DERIVED_0" order-by-type="ASC" />
        </order-by-columns>
    </assert>
    <assert id="assertSelectWithBindingTableAndConfigTable" parameters="1,2,9,10,'init'">
        <tables>
            <table name="t_order" alias="o"/>
            <table name="t_order_item" alias="i"/>
        </tables>
        <conditions>
            <condition column-name="user_id" table-name="t_order" operator="IN">
                <value index="0" literal="1" type="int" />
                <value index="1" literal="2" type="int" />
            </condition>
            <condition column-name="order_id" table-name="t_order" operator="BETWEEN">
                <value index="2" literal="9" type="int" />
                <value index="3" literal="10" type="int" />
            </condition>
        </conditions>
        <order-by-columns>
            <order-by-column owner="i" name="item_id" alias="ORDER_BY_DERIVED_0" order-by-type="ASC" />
        </order-by-columns>
    </assert>
    <assert id="assertSelectCountWithExpression">
        <tables>
            <table name="t_order" alias="o" />
        </tables>
        <aggregation-select-items>
            <aggregation-select-item aggregation-type="COUNT" inner-expression="(o.order_id)" />
        </aggregation-select-items>
    </assert>
    <assert id="assertSelectCountWithBindingTable" parameters="1,2,9,10">
        <tables>
            <table name="t_order" alias="o"/>
            <table name="t_order_item" alias="i"/>
        </tables>
        <conditions>
            <condition column-name="user_id" table-name="t_order" operator="IN">
                <value index="0" literal="1" type="int" />
                <value index="1" literal="2" type="int" />
            </condition>
            <condition column-name="order_id" table-name="t_order" operator="BETWEEN">
                <value index="2" literal="9" type="int" />
                <value index="3" literal="10" type="int" />
            </condition>
        </conditions>
        <aggregation-select-items>
            <aggregation-select-item inner-expression="(*)" aggregation-type="COUNT" alias="items_count"/>
        </aggregation-select-items>
    </assert>
    <assert id="assertSelectCountWithBindingTableWithJoin" parameters="1,2,9,10">
        <tables>
            <table name="t_order" alias="o"/>
            <table name="t_order_item" alias="i"/>
        </tables>
        <conditions>
            <condition column-name="user_id" table-name="t_order" operator="IN">
                <value index="0" literal="1" type="int" />
                <value index="1" literal="2" type="int" />
            </condition>
            <condition column-name="order_id" table-name="t_order" operator="BETWEEN">
                <value index="2" literal="9" type="int" />
                <value index="3" literal="10" type="int" />
            </condition>
        </conditions>
        <aggregation-select-items>
            <aggregation-select-item inner-expression="(*)" aggregation-type="COUNT" alias="items_count"/>
        </aggregation-select-items>
    </assert>
</asserts>
